buildscript {

	repositories {

		mavenLocal()

		maven {

			url "${artefact_repository_base_url}/${artefact_repository_global_repository}"

			credentials {
				username = "${artifactory_user}"
				password = "${artifactory_password}"
			}

		}

	}

	dependencies {
		classpath group: 'com.liferay', name: 'com.liferay.gradle.plugins', version: '4.4.5'
		classpath group: "com.liferay", name: "com.liferay.gradle.plugins.rest.builder", version: "1.0.36"
		classpath group: "com.liferay", name: "com.liferay.gradle.plugins.target.platform", version: "1.1.9"
		classpath group: 'com.pfiks.gradle.plugin', name: 'ReleasePlugin', version: '1.3.0'
		classpath group: 'org.jfrog.buildinfo', name: 'build-info-extractor-gradle', version: '4.9.6'
		classpath group: 'org.sonarsource.scanner.gradle', name: 'sonarqube-gradle-plugin', version: '2.6.2'
	}

}

allprojects {
	apply plugin: 'com.jfrog.artifactory'
}

artifactoryPublish.skip = true

apply plugin: 'com.pfiks.gradle.plugin'

subprojects {

	apply plugin: 'com.liferay.plugin'
	apply plugin: "com.liferay.portal.tools.rest.builder"
	apply plugin: "com.liferay.target.platform"
	apply plugin: 'java'
	apply plugin: 'maven'
	apply plugin: 'maven-publish'
	apply plugin: 'org.sonarqube'
	apply plugin: 'jacoco'

	repositories {

		mavenLocal();

		maven {

			url "${artefact_repository_base_url}/${artefact_repository_global_repository}"

			credentials {
				username = "${artefact_repository_user}"
				password = "${artefact_repository_password}"
			}

		}

	}

	dependencies {

		targetPlatformBoms group: 'com.liferay.portal', name: 'release.portal.bom', version: '7.2.0'
		targetPlatformBoms group: 'com.liferay.portal', name: 'release.portal.bom.compile.only', version: '7.2.0'

		compile group: 'org.osgi', name: 'osgi.cmpn', version: '6.0.0'
		compile group: 'org.osgi', name: 'osgi.core', version: '5.0.0'

	}

	sourceCompatibility = 1.8
	checkSourceFormatting.enabled = false

	task setBuildProperties() {

		Properties properties = new Properties()
		File bndFile = file('bnd.bnd')

		inputs.files bndFile

		doLast {

			if (!bndFile.exists()) {
				throw new GradleException('Unable to find bnd.bnd at ' + bndFile().getAbsolutePath())
			}

			bndFile.withInputStream { stream ->
				properties.load(stream)
			}

			project.version(properties.getProperty('Bundle-Version').replace('.SNAPSHOT', '-SNAPSHOT'))
			project.group(gradle.groupId)

			logger.info "Project group: $project.group, version: $project.version"

		}

	}

	tasks.artifactoryPublish.dependsOn(setBuildProperties)
	tasks.compileJava.dependsOn(setBuildProperties)

	jar {
		archiveName = project.name + '.jar'
	}

	task javadocJar(type: Jar) {
		classifier = 'javadoc'
		from javadoc
	}

	task sourcesJar(type: Jar) {
		from sourceSets.main.allSource
		classifier = 'sources'
	}

	publishing {

		publications {

			pfiksArtifactory(MavenPublication) {
				from components.java
				artifact sourcesJar
				artifact javadocJar
				groupId gradle.groupId
			}

		}

	}

	def releaseRepository = "${artefact_repository_release_repository}";
	def snapshotRepository = "${artefact_repository_snapshot_repository}";
	def repositoryKey = (version.contains('.SNAPSHOT') || version.contains('-SNAPSHOT')) ? snapshotRepository : releaseRepository;

	artifactory {

		contextUrl = "${artefact_repository_base_url}"

		publish {

			repository {
				repoKey = "${repositoryKey}"
				username = "${artifactory_user}"
				password = "${artifactory_password}"
				maven = true
			}

			defaults {
				publications('pfiksArtifactory')
				publishArtifacts = true
				publishPom = true
			}

		}

	}

}
